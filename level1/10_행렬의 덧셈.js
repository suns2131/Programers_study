/**
 * 문제 설명
 * 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.
 *
 * 제한 조건
 * 행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.
 * 입출력 예
 * arr1    arr2    return
 * [[1,2],[2,3]]    [[3,4],[5,6]]    [[4,6],[7,9]]
 * [[1],[2]]    [[3],[4]]    [[4],[6]]
 */
//배열을 받아야될때는 map 더한 숫자가 필요할때는 reduce를 써야겠다 도저히reduce로 배열 받아오는거는 모르겠음.
let input = [[1,2],[2,3]];
let input2 = [[3,4],[5,6]];
// 이거는 못풀어서 찾아봤음. reduce로 활용하려고해봤지만 도저히안되서 찾아봄.
function s(x,y){
    //map을 이중으로 선언해서 각 배열의 값을 뽑아내서 더한것을 배열로 리턴받음.
    //e,i는 e는 arr1의 배열이고 그 안의 인덱스값이 i임. e를 콘솔로 찍었을때 [1,2] [2,3] 이런식으로 나옴
    //e에 따로 인덱스를 지정하지 않아도 자동으로 인덱스가 순서대로 들어가기 때문에 그 안에서 map을 한번 더 실행하여
    //배열안에 이중 배열이 존재할경우 그 안에서의 인덱스값을 뽑아낸다. 인덱스 값을 뽑아낸 값과 전달받은 두번째 배열에서 인덱싱값을
    //수동으로 지정하여 덧셈한 것을 동일한 배열의 형태로 뽑아냄.
    function solution(arr1, arr2) {
        var answer = arr1.map((e,i) => e.map((f,j) => f+arr2[i][j]));
        return values;
    }

}
console.log(s(input,input2))