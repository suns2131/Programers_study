/**
 * 문제 설명
 * 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.
 *
 * 제한 조건
 * x는 1 이상, 10000 이하인 정수입니다.
 * 입출력 예
 * arr    return
 * 10    true
 * 12    true
 * 11    false
 * 13    false
 * 입출력 예 설명
 * 입출력 예 #1
 * 10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.
 *
 * 입출력 예 #2
 * 12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.
 *
 * 입출력 예 #3
 * 11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.
 *
 * 입출력 예 #4
 * 13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.
 */


function solution(x) {
    //받아온 숫자값을 문자열로 치환 후 문자별로 분리하여 배열화함.
    //map함수를 통해서 안에 있는 문자열을 숫자로 치환함.
    //치환한 숫자를 reduce함수를 사용하여 다 더한다. > 자리수의 합을 구할수 있음 .
    //받아온 숫자값 % 자리수의 합이 0이면 true 아닐경우 false 를 반환하도록함.
    //이유는 나머지가 0인것은 맞아떨어지기때문에 하샤드 수라서 true로 판단하게 하엿음.
    var answer = !(x % x.toString().split('').map(e => Number(e)).reduce((acc,cur) => acc + cur,0));
    return answer;
}

//다른사람 풀이중 괜찮았던거
// 분석해보기

function Harshad(n){
    return !(n % (n + "").split("").reduce((a, b) => +b + +a ));
}

// 아래는 테스트로 출력해 보기 위한 코드입니다.
console.log(Harshad(148))
